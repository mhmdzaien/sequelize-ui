// Code generated by jtd-codegen for TypeScript v0.2.1

export type SchemaV0 = SequelizeState

export type Association =
  | AssociationBelongsTo
  | AssociationHasMany
  | AssociationHasOne
  | AssociationManyToMany

export interface AssociationBelongsTo {
  type: 'BELONGS_TO'
  id: string
  sourceId: string
  targetId: string
  foreignKey?: string | null
  name?: string | null
  targetForeignKey?: string | null
  through?: string | null
}

export interface AssociationHasMany {
  type: 'HAS_MANY'
  id: string
  sourceId: string
  targetId: string
  foreignKey?: string | null
  name?: string | null
  targetForeignKey?: string | null
  through?: string | null
}

export interface AssociationHasOne {
  type: 'HAS_ONE'
  id: string
  sourceId: string
  targetId: string
  foreignKey?: string | null
  name?: string | null
  targetForeignKey?: string | null
  through?: string | null
}

export interface AssociationManyToMany {
  type: 'MANY_TO_MANY'
  id: string
  sourceId: string
  targetId: string
  through: string
  foreignKey?: string | null
  name?: string | null
  targetForeignKey?: string | null
}

export enum FieldType {
  Array = 'ARRAY',
  Blob = 'BLOB',
  Boolean = 'BOOLEAN',
  Date = 'DATE',
  Dateonly = 'DATEONLY',
  Decimal = 'DECIMAL',
  Double = 'DOUBLE',
  Float = 'FLOAT',
  Integer = 'INTEGER',
  Json = 'JSON_',
  Real = 'REAL',
  String = 'STRING',
  Text = 'TEXT',
  Uuid = 'UUID',
}

export interface Field {
  id: string
  modelId: string
  name: string
  primaryKey: boolean
  required: boolean
  type: FieldType
  unique: boolean
}

export interface Model {
  assocs: Association[]
  fields: Field[]
  id: string
  name: string
}

export enum SequelizeStateConfigDialect {
  Sqlite = 'sqlite',
}

export interface SequelizeStateConfig {
  dialect: SequelizeStateConfigDialect
  name: string
  singularTableNames: boolean
  snake: boolean
  timestamps: boolean
}

export enum SequelizeStatePageState {
  About = 'ABOUT',
  Loading = 'LOADING',
  Model = 'MODEL',
  Project = 'PROJECT',
}

export interface SequelizeState {
  config: SequelizeStateConfig
  models: Model[]
  pageState: SequelizeStatePageState
  currentModelId?: string | null
}
